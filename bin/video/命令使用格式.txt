fd 就是打开的管道文件。

注意：在arm开发板上字符串不要加\r   

write(fd, "pause\r\n",strlen("pause\n")); 命令，用 -slave 使其与键盘分离，记住，
当与键盘分离后，mplayer接受的命令都是以\n结尾的命令，
而且如果命令后还要加参数
，命令和参数之间至少要有一个空格，不然起不到效果。
 
write(fd,"volume +5\n",strlen("volume +5\n"));加声音

write(fd,"volume -5\n",strlen("volume -5\n"));减声音
 

write(fd,"seek -5\n",strlen("seek -5\n"));快退。
write(fd,"seek +5\n",strlen("seek -5\n"));快进。

等等的命令，用法格式都是一样的，对照着官网手册，就可以设计了

一：mplayer简介
 
MPlayer是一款开源的多媒体播放器，以GNU通用公共许可证发布。此款软件可在各主流作业系统使用，例如Linux和其他类Unix作业系统、微软的视窗系统及苹果电脑的Mac OS X系统。MPlayer是建基于命令行界面，在各作业系统可选择安装不同的图形界面。
 
因为linux下都是命令行的操作方式，所以对mplayer的各种操作都是用命令来实现的，这次主要用的是它的slave工作方式
 
 
 
slave模式协议
 
1，简介：
 
      默认mplayer是从键盘上获得控制信息
 
  mplayer另外提供了一种更为灵活的控制方式，用来进行播放控制――slave模式
 
      在slave模式下，MPlayer为后台运行其他程序，不再截获键盘事件，
 
  MPlayer会从标准输入读一个换行符（\n）分隔开的命令。
 
 
 
2，操作：
 
#mplayer -input cmdlist
 
 // 会打印出一份当前mplayer所支持的所有slave模式的命令
 
方法一：从控制台输入控制命令(测试使用)
 
    运行mplayer -slave -quiet ，并在控制台窗口输入slave命令。
 
//-slave 启动从模式  
 
//-quiet 不输出冗余的信息
 
 
常用到的 Mplayer指令：
 
loadfile   string   //参数string 为 歌曲名字。 
 
volume 100 1  //设置音量 中间的为音量的大小。
 
mute  1/0 //静音开关
 
pause  //暂停/取消暂停
 
get_time_length  //返回值是播放文件的长度，以秒为单位。
 
seek value   //向前查找到文件的位置播放 参数value为秒数。
 
get_percent_pos //返回文件的百分比（0--100）
 
get_time_pos //打印出在文件的当前位置用秒表示，采用浮点数
 
volume  [abs] //增大/减小音量，或将其设置为，如果[abs]不为零

 quit [value]
 退出MPlayer。可选的整数[value]的值作为返回代码
 为mplayer的进程（默认值：0）。
 
get_file_name //打印出当前文件名
 
get_meta_album //打印出当前文件的'专辑'的元数据
 
get_meta_artist //打印出当前文件的'艺术家'的元数据
 
get_meta_comment //打印出当前文件的'评论'的元数据
 
get_meta_genre //打印出当前文件的'流派'的元数据
 
get_meta_title //打印出当前文件的'标题'的元数据
 
get_meta_year //打印出当前文件的'年份'的元数据
 
 
 
方法二：从有名管道(fifo)输入控制命令（应用编程中使用）
 
    #mkfifo 
 
    #mplayer  -slave  -input  file= 
 
    //用户可以通过往管道里写入slave命令来实现对应的功能
 
 
 
主进程创建一个无名管道和一个有名管道
 
 
 
1:开一个子进程
 
在子进程中：
 
启动Mplayer，参数规定通过命名管道进行通信；
 
把子进程的标准输出重定向无名管道的写端；
 
Mplayer从命名管道读到主进程发送的命令;
 
Mplayer发出的内容发送到无名管道中，父进程通过读管道就可以读到Mplayer发出的信息。
